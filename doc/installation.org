#+TITLE: LCATR Job Installation
#+AUTHOR: Brett Viren
#+EMAIL: bv@bnl.gov
#+DATE: \today

#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \hypersetup{
#+LATEX_HEADER:   hyperindex=true,
#+LATEX_HEADER:   plainpages=false,
#+LATEX_HEADER:   colorlinks=true,
#+LATEX_HEADER:   linkcolor=black
#+LATEX_HEADER: }

#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:

To facilitate organizing test software installation and environment
configuration a few conventions are to be followed when installing
LSST CCD acceptance testing or analysis software.

* Minimum Requirements

LSST CCD test or analysis software must provide two main programs: a
/producer/ and a /validator/.  Their locations must be communicated to
the job harness by defining =LCATR_PRODUCER= and =LCATR_VALIDATOR=
environment variables.  


* Installation Locations

All software packages are to be installed to locations that follow the
convention:

#+BEGIN_EXAMPLE
$LCATR_INSTALL_AREA/<jobname>/<jobversion>/
#+END_EXAMPLE

The =<jobname>= is the canonical name for the software and the
=<jobversion>= string must match that of a GIT tag which marks the
version of the software that is installed.  It is up to the software
installation manager to assure this correspondence.

The value of =LCATR_INSTALL_AREA= is specific to the hosting computer
and may be specified through the usual job harness configuration
mechanism or in the calling environment.

* Environment Management

The job harness enforces consistent environment management of the
various software packages through the use of the Environment Modules
Project[fn:web] and its /modulefiles/.  These files define the
environment variables required by the harness as well as any
additional environment needed by a particular package.  There is a
/modulefile/ corresponding to the name and version of each installed
instance of the software.  Some conventions are followed to make
writing a /modulefile/ simple.

[fn:web] http://modules.sf.net/

** Conventions for writing a /modulefile/

The environment requirements placed on the software by the job harness
can be satisfied by properly calling the function =lcatr_package=
which is defined in the =lcatr.tcl= library provided by the
/modulefile/ package.  The minimum module file is thus:

#+BEGIN_SRC Tcl
source $::env(LCATR_MODULES)/lcatr.tcl
lcatr_package <producer> <validator>
#+END_SRC

The =<producer>= and =<validator>= arguments are taken to be paths
relative to =$LCATR_INSTALL_AREA/<jobname>/<jobversion>/= and pointing
to the /producer/ and /validator/ main programs, respectively.


** Locating a /modulefile/

The /modulefile/ for an installed instance of a package may be located
as supported by the Environment Module Project system.  Ultimately the
locations checked are governed by the value of the =MODULEPATH=
environment variable.  Two locations in particular are suggested for
LCATR packages.

A central git repository[fn:mfgit] of /modulefiles/ is maintained.  This
repository is populated with directories and files named like
=<jobname>/<jobversion>=.  For packages that have their /modulefiles/
kept in this repository a new /modulefile/ must be added for each
release of the software.  It is this repository area that is pointed
to by the =LCATR_MODULES= environment variable used above.

It is common for /modulefiles/ to be unchanged between different
releases of the software and so it can become burdensome to make new
ones for each release.  To rectify this a /modulefile/ can be
maintained directly in the software source repository and be installed
along with the package to the installation area.  In this case the
/modulefile/ must exist at top-level in the package directory and be
called -.modulerc=
 

In summary, every installed instance of the software must have a
/modulefile/ in at least one of two places:

#+begin_example
$LCATR_INSTALL_AREA/<jobname>/<jobversion>/.modulerc
$LCATR_MODULES/<jobname>/<jobversion>
#+end_example

By default the =MODULEPATH= variable is set to first check the install
area before the central /modulefiles/ repository.

[fn:mfgit] https://git.racf.bnl.gov/astro/cgit/lcatr/modulefiles.git/
